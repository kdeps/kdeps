{{ .Header }}

ActionID = "clientResource"
Name = "Client Resource"
Description = "This resource creates a client session."
Category = ""
Requires {
        // Define the ID of any dependency resource that must be executed before this resource.
        // For example "@aiChatResource1"
}
Run {
        // RestrictToHTTPMethods specifies the HTTP methods required for the request.
        // If none are specified, all HTTP methods are permitted. This restriction is only
        // in effect when APIServerMode is enabled. If the request method is not in this list,
        // the action will be skipped.
        RestrictToHTTPMethods {
            "GET"
        }

        // RestrictToRoutes specifies the URL paths required for the request.
        // If none are specified, all routes are permitted. This restriction is only
        // in effect when APIServerMode is enabled. If the request path is not in this list,
        // the action will be skipped.
        RestrictToRoutes {
            "/api/v1/whois"
        }

        // AllowedHeaders specifies the permitted HTTP headers for the request.
        // If none are specified, all headers are allowed. This restriction is only
        // in effect when APIServerMode is enabled.
        AllowedHeaders {
            // "X-API-KEY"
        }

        // AllowedParams specifies the permitted query parameters for the request.
        // If none are specified, all parameters are allowed. This restriction is only
        // in effect when APIServerMode is enabled.
        AllowedParams {}

        SkipCondition {
                // Conditions under which the execution of this resource should be skipped.
                // If any evaluated condition returns true, the resource execution will be bypassed.
                // request.path != "/api/v1/whois" && request.method != "GET"
        }

        PreflightCheck {
                Validations {
                        // This section expects boolean validations.
                        // If any validation returns false, an exception will be thrown before proceeding to the next step.
                        // request.header("X-API-KEY") != ""
                }
                //
                // Custom error message and code to be returned immediately if the preflight check fails.
                //
                // Error {
                //         Code = 0
                //         Message = ""
                // }
                //
                // Boolean flag to enable or disable retry functionality for the validation check.
                // Default is false.
                Retry = false
                //
                // The number of times to retry the validation check before considering it a failure.
                // This property is only used when Retry is set to true. Default value is 3 retry attempts.
                RetryTimes = 3
        }

        PostflightCheck {
                Validations {
                        // This section expects boolean validations.
                        // If any validation returns false, an exception will be thrown after executing the action.
                }
                //
                // Custom error message and code to be returned if the postflight check fails.
                //
                // Error {
                //         Code = 0
                //         Message = ""
                // }
                //
                // Boolean flag to enable or disable retry functionality for the validation check.
                // Default is false.
                Retry = false
                //
                // The number of times to retry the validation check before considering it a failure.
                // This property is only used when Retry is set to true. Default value is 3 retry attempts.
                RetryTimes = 3
        }

        // The Expr block is space for evaluating standard PKL expressions. It is primarily used to execute
        // expressions that produce side effects, such as updating resources or triggering actions, but also supports
        // general-purpose evaluation of any valid PKL expression, making it a place for inline logic and
        // scripting within a configuration.
        Expr {
                // memory.setRecord("foo", "bar") // Persistent data
                // memory.clear()
                // session.setRecord("foo", "bar") // Temporary data only for this request
        }

        // Initializes an HTTP client for this resource.
        //
        // This resource offers the following helper functions:
        //
        // - client.resource("ResourceID")
        // - client.responseBody("ResourceID")
        // - client.responseHeader("ResourceID", "HEADER")
        //
        // To use these in your resource, you can define a local variable as follows:
        //
        // local bearerToken = client.responseHeader("ResourceID", "Bearer")
        // You can then access the value using bearerToken.
        //
        // Module functions like client.*, llm.*, python.* are called directly.
        // Request functions use request.params("q") for direct assignment.
        // For URL construction, use the Params field to add query parameters.
        // For Wikipedia API, use underscores in page titles (e.g., "Neil_Armstrong" not "NeilArmstrong")
        // Note: All functions are called directly without @() wrapper
        HTTPClient {
                Method = "GET"  // Specifies the HTTP method to be used for the request.
                
                // Example: Wikipedia API to get page info about a person
                // Uses the 'q' query parameter from the incoming request
                // Note: Wikipedia API expects underscores in page titles (e.g., "Neil_Armstrong")
                Url = """
                https://en.wikipedia.org/api/rest_v1/page/summary/\(request.params("q"))
                """
                
                Data {
                        // Any data that will be sent with the HTTP request.
                        // For GET requests, this is typically empty
                }
                Headers {
                        // Headers to be included in the HTTP request.
                        ["User-Agent"] = "KDeps-Agent/1.0"
                        ["Accept"] = "application/json"
                        // ["Authorization"] = "Bearer \(request.header(\"X-API-KEY\"))"  // Example auth header
                }
                Params {
                        // Query parameters to be added to the URL
                        // Example: ["titles"] = request.params("q")
                }
                // Timeout duration in seconds. This specifies when to terminate the request.
                TimeoutDuration = 30.s
        }
}
